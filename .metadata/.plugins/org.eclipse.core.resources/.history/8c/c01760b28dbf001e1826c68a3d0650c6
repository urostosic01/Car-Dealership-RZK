package com.pmf.rzk.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.pmf.rzk.exception.ModelNijePronadjenError;
import com.pmf.rzk.exception.ProizvodjacNijePronadjenError;
import com.pmf.rzk.model.Automobil;
import com.pmf.rzk.model.Clan;
import com.pmf.rzk.model.Clanuloga;
import com.pmf.rzk.model.Kupovina;
import com.pmf.rzk.model.KupovinaAutomobil;
import com.pmf.rzk.model.Model;
import com.pmf.rzk.model.Proizvodjac;
import com.pmf.rzk.repository.AutomobilRepository;
import com.pmf.rzk.repository.ClanRepository;
import com.pmf.rzk.repository.KupovinaAutomobilRepository;
import com.pmf.rzk.repository.KupovinaRepository;
import com.pmf.rzk.repository.ModelRepository;
import com.pmf.rzk.repository.ProizvodjacRepository;

@Service
public class AutoplacService {

	@Autowired
	ProizvodjacRepository proizvodjacRepo;

	@Autowired
	ModelRepository modelRepo;

	@Autowired
	AutomobilRepository automobilRepo;

	@Autowired
	ClanRepository clanRepo;
	
	@Autowired
	KupovinaRepository kupovinaRepo;
	
	@Autowired
	KupovinaAutomobilRepository kupovinaAutoRepo;

	public List<Proizvodjac> getProizvodjaci() {
		return proizvodjacRepo.findAll();
	}

	public List<Model> getModeli(Integer idManufacturer) {
		Optional<Proizvodjac> trazeni = proizvodjacRepo.findById(idManufacturer);
		if (trazeni.isEmpty()) {
			System.out.println("Nepostojeci proizvodjac");
			throw new ProizvodjacNijePronadjenError("Proizvodjac nije pronadjen! ", idManufacturer.toString());
		}
		return modelRepo.findByProizvodjac(trazeni.get());
	}

	public boolean dodajAutomobil(Integer idUser, Integer idModel, Automobil a) {
		Optional<Clan> proveraClana = clanRepo.findById(idUser);
		Clan admin = null;
		if (proveraClana.isPresent()) {
			for (Clanuloga u : proveraClana.get().getClanulogas()) {
				if (u.getUloga().getIdUloga() == 1 || u.getUloga().getIdUloga() == 2) {
					admin = proveraClana.get();
				}
			}
		}
		if (admin != null) {
			Optional<Model> trazeniModel = modelRepo.findById(idModel);
			if (trazeniModel.isPresent()) {
				a.setModel(trazeniModel.get());
				automobilRepo.save(a);
				return true;
			}
			else {
				throw new ModelNijePronadjenError("Model nije pronadjen!", idModel.toString());
			}
		}
		else {
			System.out.println("Korisnik nije admin!");
			return false;
		}
		
	}

	public KupovinaAutomobil dodajAutomobilUKupovinu(Integer idCar, Integer idPurchase, KupovinaAutomobil k) {
		Optional<Automobil> trazeniAutomobil = automobilRepo.findById(idCar);
		Optional<Kupovina> trazenaKupovina = kupovinaRepo.findById(idPurchase);
		if(trazeniAutomobil.isPresent() && trazenaKupovina.isPresent()) {
			k.setAutomobil(trazeniAutomobil.get());
			k.setKupovina(trazenaKupovina.get());
			kupovinaAutoRepo.save(k);
		}
		return null;
	}

}
